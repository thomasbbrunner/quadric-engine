#ifndef COMMON_H
#define COMMON_H

#include <vector>
#include <random>

class Math
{
  public:
    static void add_to_each(std::vector<unsigned int> *vec, unsigned int value)
    {
        for (unsigned int i = 0; i < vec->size(); i++)
        {
            vec->at(i) += value;
        }
    }

    static float random(float max, float min)
    {
        std::random_device rd;  //Will be used to obtain a seed for the random number engine
        std::mt19937 gen(rd()); //Standard mersenne_twister_engine seeded with rd()
        std::uniform_real_distribution<> dis(min, max);

        // Use dis to transform the random unsigned int generated by gen into a
        // double in [1, 2). Each call to dis(gen) generates a new random double

        return dis(gen);
    }
};

#endif